rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /marketplaceItems/{itemId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }

    match /forumPosts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }

    match /helpArticles/{articleId} {
      allow read: if true;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }

    match /chatMessages/{messageId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }

    match /messages/{conversationId}/{messageId} {
      allow read: if request.auth != null &&
        (request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants);
      allow write: if request.auth != null &&
        request.auth.uid == request.resource.data.senderId;
    }

  }
}
